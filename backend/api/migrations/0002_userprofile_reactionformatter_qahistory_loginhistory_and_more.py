# Generated by Django 4.2.7 on 2025-10-07 15:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, null=True)),
                ('institution', models.CharField(blank=True, max_length=255, null=True)),
                ('education_level', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='ReactionFormatter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_reaction', models.TextField()),
                ('balanced_reaction', models.TextField(blank=True, null=True)),
                ('reactants', models.JSONField(blank=True, null=True)),
                ('products', models.JSONField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('is_successful', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reaction Formatter',
                'verbose_name_plural': 'Reaction Formatters',
                'db_table': 'reaction_formatter',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QAHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('sources', models.JSONField(blank=True, null=True)),
                ('is_successful', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='qa_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Q&A History',
                'verbose_name_plural': 'Q&A Histories',
                'db_table': 'qa_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('session_token', models.CharField(blank=True, max_length=255, null=True)),
                ('is_successful', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Login History',
                'verbose_name_plural': 'Login Histories',
                'db_table': 'login_history',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='CorrectionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_statement', models.TextField()),
                ('corrected_statement', models.TextField(blank=True, null=True)),
                ('was_changed', models.BooleanField(default=False)),
                ('is_successful', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Correction History',
                'verbose_name_plural': 'Correction Histories',
                'db_table': 'correction_history',
                'ordering': ['-created_at'],
            },
        ),
    ]
